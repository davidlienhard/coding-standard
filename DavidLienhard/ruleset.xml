<?xml version="1.0"?>
<ruleset name="DavidLienhard coding standard">
    <description>DavidLienhard coding standard</description>

    <!-- inherit rules -->
    <rule ref="PSR2" />

    <!-- disallow global keyword -->
    <rule ref="Squiz.PHP.GlobalKeyword" />

    <!-- force use of short array syntax ([ ])-->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax.Found">
        <type>error</type>
    </rule>

    <!-- check whitespaces before and after operators -->
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true" />
        </properties>
        <type>error</type>
    </rule>

    <!-- disallow and & or, force && and || -->
    <rule ref="Squiz.Operators.ValidLogicalOperators">
        <type>error</type>
    </rule>

    <!-- add generic php rule -->
    <rule ref="Generic.PHP">
        <exclude name="Generic.PHP.ClosingPHPTag" />
        <exclude name="Generic.PHP.UpperCaseConstant.Found" />
    </rule>

    <!-- require strict types to be set -->
    <rule ref="Generic.PHP.RequireStrictTypes">
        <type>error</type>
    </rule>

    <!-- disallow silenced errors (@) -->
    <rule ref="Generic.PHP.NoSilencedErrors">
        <type>error</type>
    </rule>

    <!-- extend line limit to 180 -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="180"/>
            <property name="absoluteLineLimit" value="0"/>
        </properties>
    </rule>

    <!-- no spacing around concat -->
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>

    <rule ref="Squiz.Arrays.ArrayDeclaration">
        <exclude name="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed" />
        <exclude name="Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast" />
        <exclude name="Squiz.Arrays.ArrayDeclaration.KeyNotAligned" />
        <exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned" />
        <exclude name="Squiz.Arrays.ArrayDeclaration.ValueNotAligned" />
        <exclude name="Squiz.Arrays.ArrayDeclaration.NoComma" />
        <exclude name="Squiz.Arrays.ArrayDeclaration.MultiLineNotAllowed" />
    </rule>

    <!-- Private methods MUST not be prefixed with an underscore -->
    <rule ref="Squiz.NamingConventions.ValidFunctionName.PrivateNoUnderscore">
        <severity>0</severity>
    </rule>
    <rule ref="PSR2.Methods.MethodDeclaration.Underscore">
        <type>error</type>
    </rule>

    <!-- Private properties MUST not be prefixed with an underscore -->
    <rule ref="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore">
        <severity>0</severity>
    </rule>
    <rule ref="PSR2.Classes.PropertyDeclaration.Underscore">
        <type>error</type>
    </rule>

    <!-- closing comment for long conditions -->
    <rule ref="Squiz.Commenting.LongConditionClosingComment.Missing" />

    <!-- closing brace of array must be on new line-->
    <rule ref="Generic.Arrays.ArrayIndent"/>

    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint">
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification" />
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint">
        <exclude name="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingTraversableTypeHintSpecification" />
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint">
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification" />
    </rule>

    <!-- format union typehint -->
    <rule ref="SlevomatCodingStandard.TypeHints.UnionTypeHintFormat">
        <properties>
            <property name="withSpaces" value="no" />
            <property name="shortNullable" value="no" />
            <property name="nullPosition" value="last" />
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceOperator" />
    <rule ref="SlevomatCodingStandard.Functions.StrictCall" />
    <rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators" />
    <rule ref="SlevomatCodingStandard.Operators.RequireOnlyStandaloneIncrementAndDecrementOperators" />
    <rule ref="SlevomatCodingStandard.Operators.RequireCombinedAssignmentOperator" />
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses" />
    <rule ref="SlevomatCodingStandard.PHP.UselessParentheses" />
    <rule ref="SlevomatCodingStandard.PHP.UselessSemicolon" />
    <rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable" />
    <rule ref="SlevomatCodingStandard.Functions.RequireArrowFunction" />
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses" />
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility" />
    <rule reg="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash" />
    <rule ref="SlevomatCodingStandard.Functions.RequireSingleLineCall">
        <properties>
            <property name="maxLineLength" value="70"/>
        </properties>
    </rule>

    <!-- dont display warnings -->
    <arg name="warning-severity" value="0"/>

    <!-- parse only php files -->
    <arg name="extensions" value="php"/>

    <!-- show process -->
    <arg value="p"/>
</ruleset>
